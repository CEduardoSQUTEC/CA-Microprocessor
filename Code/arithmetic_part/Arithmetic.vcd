$date
	Sat Jun 13 19:05:46 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module arithmethic_tb $end
$var wire 32 ! result [31:0] $end
$var reg 4 " ALUop [3:0] $end
$var reg 32 # a [31:0] $end
$var reg 32 $ b [31:0] $end
$scope module DUT_Arithmetic $end
$var wire 4 % ALUop [3:0] $end
$var wire 32 & a [31:0] $end
$var wire 32 ' b [31:0] $end
$var wire 32 ( wire_sum [31:0] $end
$var wire 32 ) wire_sub [31:0] $end
$var wire 1 * op_sign $end
$var reg 32 + result [31:0] $end
$scope module sub $end
$var wire 32 , a [31:0] $end
$var wire 32 - b [31:0] $end
$var wire 1 * f_cin $end
$var wire 32 . result [31:0] $end
$var wire 32 / carry [31:0] $end
$scope module add0 $end
$var wire 1 0 a $end
$var wire 1 1 b $end
$var wire 1 * cin $end
$var wire 1 2 cout $end
$var wire 1 3 sum $end
$upscope $end
$scope module add1 $end
$var wire 1 4 a $end
$var wire 1 5 b $end
$var wire 1 6 cin $end
$var wire 1 7 cout $end
$var wire 1 8 sum $end
$upscope $end
$scope module add10 $end
$var wire 1 9 a $end
$var wire 1 : b $end
$var wire 1 ; cin $end
$var wire 1 < cout $end
$var wire 1 = sum $end
$upscope $end
$scope module add11 $end
$var wire 1 > a $end
$var wire 1 ? b $end
$var wire 1 @ cin $end
$var wire 1 A cout $end
$var wire 1 B sum $end
$upscope $end
$scope module add12 $end
$var wire 1 C a $end
$var wire 1 D b $end
$var wire 1 E cin $end
$var wire 1 F cout $end
$var wire 1 G sum $end
$upscope $end
$scope module add13 $end
$var wire 1 H a $end
$var wire 1 I b $end
$var wire 1 J cin $end
$var wire 1 K cout $end
$var wire 1 L sum $end
$upscope $end
$scope module add14 $end
$var wire 1 M a $end
$var wire 1 N b $end
$var wire 1 O cin $end
$var wire 1 P cout $end
$var wire 1 Q sum $end
$upscope $end
$scope module add15 $end
$var wire 1 R a $end
$var wire 1 S b $end
$var wire 1 T cin $end
$var wire 1 U cout $end
$var wire 1 V sum $end
$upscope $end
$scope module add16 $end
$var wire 1 W a $end
$var wire 1 X b $end
$var wire 1 Y cin $end
$var wire 1 Z cout $end
$var wire 1 [ sum $end
$upscope $end
$scope module add17 $end
$var wire 1 \ a $end
$var wire 1 ] b $end
$var wire 1 ^ cin $end
$var wire 1 _ cout $end
$var wire 1 ` sum $end
$upscope $end
$scope module add18 $end
$var wire 1 a a $end
$var wire 1 b b $end
$var wire 1 c cin $end
$var wire 1 d cout $end
$var wire 1 e sum $end
$upscope $end
$scope module add19 $end
$var wire 1 f a $end
$var wire 1 g b $end
$var wire 1 h cin $end
$var wire 1 i cout $end
$var wire 1 j sum $end
$upscope $end
$scope module add2 $end
$var wire 1 k a $end
$var wire 1 l b $end
$var wire 1 m cin $end
$var wire 1 n cout $end
$var wire 1 o sum $end
$upscope $end
$scope module add20 $end
$var wire 1 p a $end
$var wire 1 q b $end
$var wire 1 r cin $end
$var wire 1 s cout $end
$var wire 1 t sum $end
$upscope $end
$scope module add21 $end
$var wire 1 u a $end
$var wire 1 v b $end
$var wire 1 w cin $end
$var wire 1 x cout $end
$var wire 1 y sum $end
$upscope $end
$scope module add22 $end
$var wire 1 z a $end
$var wire 1 { b $end
$var wire 1 | cin $end
$var wire 1 } cout $end
$var wire 1 ~ sum $end
$upscope $end
$scope module add23 $end
$var wire 1 !" a $end
$var wire 1 "" b $end
$var wire 1 #" cin $end
$var wire 1 $" cout $end
$var wire 1 %" sum $end
$upscope $end
$scope module add24 $end
$var wire 1 &" a $end
$var wire 1 '" b $end
$var wire 1 (" cin $end
$var wire 1 )" cout $end
$var wire 1 *" sum $end
$upscope $end
$scope module add25 $end
$var wire 1 +" a $end
$var wire 1 ," b $end
$var wire 1 -" cin $end
$var wire 1 ." cout $end
$var wire 1 /" sum $end
$upscope $end
$scope module add26 $end
$var wire 1 0" a $end
$var wire 1 1" b $end
$var wire 1 2" cin $end
$var wire 1 3" cout $end
$var wire 1 4" sum $end
$upscope $end
$scope module add27 $end
$var wire 1 5" a $end
$var wire 1 6" b $end
$var wire 1 7" cin $end
$var wire 1 8" cout $end
$var wire 1 9" sum $end
$upscope $end
$scope module add28 $end
$var wire 1 :" a $end
$var wire 1 ;" b $end
$var wire 1 <" cin $end
$var wire 1 =" cout $end
$var wire 1 >" sum $end
$upscope $end
$scope module add29 $end
$var wire 1 ?" a $end
$var wire 1 @" b $end
$var wire 1 A" cin $end
$var wire 1 B" cout $end
$var wire 1 C" sum $end
$upscope $end
$scope module add3 $end
$var wire 1 D" a $end
$var wire 1 E" b $end
$var wire 1 F" cin $end
$var wire 1 G" cout $end
$var wire 1 H" sum $end
$upscope $end
$scope module add30 $end
$var wire 1 I" a $end
$var wire 1 J" b $end
$var wire 1 K" cin $end
$var wire 1 L" cout $end
$var wire 1 M" sum $end
$upscope $end
$scope module add31 $end
$var wire 1 N" a $end
$var wire 1 O" b $end
$var wire 1 P" cin $end
$var wire 1 Q" cout $end
$var wire 1 R" sum $end
$upscope $end
$scope module add4 $end
$var wire 1 S" a $end
$var wire 1 T" b $end
$var wire 1 U" cin $end
$var wire 1 V" cout $end
$var wire 1 W" sum $end
$upscope $end
$scope module add5 $end
$var wire 1 X" a $end
$var wire 1 Y" b $end
$var wire 1 Z" cin $end
$var wire 1 [" cout $end
$var wire 1 \" sum $end
$upscope $end
$scope module add6 $end
$var wire 1 ]" a $end
$var wire 1 ^" b $end
$var wire 1 _" cin $end
$var wire 1 `" cout $end
$var wire 1 a" sum $end
$upscope $end
$scope module add7 $end
$var wire 1 b" a $end
$var wire 1 c" b $end
$var wire 1 d" cin $end
$var wire 1 e" cout $end
$var wire 1 f" sum $end
$upscope $end
$scope module add8 $end
$var wire 1 g" a $end
$var wire 1 h" b $end
$var wire 1 i" cin $end
$var wire 1 j" cout $end
$var wire 1 k" sum $end
$upscope $end
$scope module add9 $end
$var wire 1 l" a $end
$var wire 1 m" b $end
$var wire 1 n" cin $end
$var wire 1 o" cout $end
$var wire 1 p" sum $end
$upscope $end
$upscope $end
$scope module sum $end
$var wire 32 q" a [31:0] $end
$var wire 32 r" b [31:0] $end
$var wire 1 * f_cin $end
$var wire 32 s" result [31:0] $end
$var wire 32 t" carry [31:0] $end
$scope module add0 $end
$var wire 1 u" a $end
$var wire 1 v" b $end
$var wire 1 * cin $end
$var wire 1 w" cout $end
$var wire 1 x" sum $end
$upscope $end
$scope module add1 $end
$var wire 1 y" a $end
$var wire 1 z" b $end
$var wire 1 {" cin $end
$var wire 1 |" cout $end
$var wire 1 }" sum $end
$upscope $end
$scope module add10 $end
$var wire 1 ~" a $end
$var wire 1 !# b $end
$var wire 1 "# cin $end
$var wire 1 ## cout $end
$var wire 1 $# sum $end
$upscope $end
$scope module add11 $end
$var wire 1 %# a $end
$var wire 1 &# b $end
$var wire 1 '# cin $end
$var wire 1 (# cout $end
$var wire 1 )# sum $end
$upscope $end
$scope module add12 $end
$var wire 1 *# a $end
$var wire 1 +# b $end
$var wire 1 ,# cin $end
$var wire 1 -# cout $end
$var wire 1 .# sum $end
$upscope $end
$scope module add13 $end
$var wire 1 /# a $end
$var wire 1 0# b $end
$var wire 1 1# cin $end
$var wire 1 2# cout $end
$var wire 1 3# sum $end
$upscope $end
$scope module add14 $end
$var wire 1 4# a $end
$var wire 1 5# b $end
$var wire 1 6# cin $end
$var wire 1 7# cout $end
$var wire 1 8# sum $end
$upscope $end
$scope module add15 $end
$var wire 1 9# a $end
$var wire 1 :# b $end
$var wire 1 ;# cin $end
$var wire 1 <# cout $end
$var wire 1 =# sum $end
$upscope $end
$scope module add16 $end
$var wire 1 ># a $end
$var wire 1 ?# b $end
$var wire 1 @# cin $end
$var wire 1 A# cout $end
$var wire 1 B# sum $end
$upscope $end
$scope module add17 $end
$var wire 1 C# a $end
$var wire 1 D# b $end
$var wire 1 E# cin $end
$var wire 1 F# cout $end
$var wire 1 G# sum $end
$upscope $end
$scope module add18 $end
$var wire 1 H# a $end
$var wire 1 I# b $end
$var wire 1 J# cin $end
$var wire 1 K# cout $end
$var wire 1 L# sum $end
$upscope $end
$scope module add19 $end
$var wire 1 M# a $end
$var wire 1 N# b $end
$var wire 1 O# cin $end
$var wire 1 P# cout $end
$var wire 1 Q# sum $end
$upscope $end
$scope module add2 $end
$var wire 1 R# a $end
$var wire 1 S# b $end
$var wire 1 T# cin $end
$var wire 1 U# cout $end
$var wire 1 V# sum $end
$upscope $end
$scope module add20 $end
$var wire 1 W# a $end
$var wire 1 X# b $end
$var wire 1 Y# cin $end
$var wire 1 Z# cout $end
$var wire 1 [# sum $end
$upscope $end
$scope module add21 $end
$var wire 1 \# a $end
$var wire 1 ]# b $end
$var wire 1 ^# cin $end
$var wire 1 _# cout $end
$var wire 1 `# sum $end
$upscope $end
$scope module add22 $end
$var wire 1 a# a $end
$var wire 1 b# b $end
$var wire 1 c# cin $end
$var wire 1 d# cout $end
$var wire 1 e# sum $end
$upscope $end
$scope module add23 $end
$var wire 1 f# a $end
$var wire 1 g# b $end
$var wire 1 h# cin $end
$var wire 1 i# cout $end
$var wire 1 j# sum $end
$upscope $end
$scope module add24 $end
$var wire 1 k# a $end
$var wire 1 l# b $end
$var wire 1 m# cin $end
$var wire 1 n# cout $end
$var wire 1 o# sum $end
$upscope $end
$scope module add25 $end
$var wire 1 p# a $end
$var wire 1 q# b $end
$var wire 1 r# cin $end
$var wire 1 s# cout $end
$var wire 1 t# sum $end
$upscope $end
$scope module add26 $end
$var wire 1 u# a $end
$var wire 1 v# b $end
$var wire 1 w# cin $end
$var wire 1 x# cout $end
$var wire 1 y# sum $end
$upscope $end
$scope module add27 $end
$var wire 1 z# a $end
$var wire 1 {# b $end
$var wire 1 |# cin $end
$var wire 1 }# cout $end
$var wire 1 ~# sum $end
$upscope $end
$scope module add28 $end
$var wire 1 !$ a $end
$var wire 1 "$ b $end
$var wire 1 #$ cin $end
$var wire 1 $$ cout $end
$var wire 1 %$ sum $end
$upscope $end
$scope module add29 $end
$var wire 1 &$ a $end
$var wire 1 '$ b $end
$var wire 1 ($ cin $end
$var wire 1 )$ cout $end
$var wire 1 *$ sum $end
$upscope $end
$scope module add3 $end
$var wire 1 +$ a $end
$var wire 1 ,$ b $end
$var wire 1 -$ cin $end
$var wire 1 .$ cout $end
$var wire 1 /$ sum $end
$upscope $end
$scope module add30 $end
$var wire 1 0$ a $end
$var wire 1 1$ b $end
$var wire 1 2$ cin $end
$var wire 1 3$ cout $end
$var wire 1 4$ sum $end
$upscope $end
$scope module add31 $end
$var wire 1 5$ a $end
$var wire 1 6$ b $end
$var wire 1 7$ cin $end
$var wire 1 8$ cout $end
$var wire 1 9$ sum $end
$upscope $end
$scope module add4 $end
$var wire 1 :$ a $end
$var wire 1 ;$ b $end
$var wire 1 <$ cin $end
$var wire 1 =$ cout $end
$var wire 1 >$ sum $end
$upscope $end
$scope module add5 $end
$var wire 1 ?$ a $end
$var wire 1 @$ b $end
$var wire 1 A$ cin $end
$var wire 1 B$ cout $end
$var wire 1 C$ sum $end
$upscope $end
$scope module add6 $end
$var wire 1 D$ a $end
$var wire 1 E$ b $end
$var wire 1 F$ cin $end
$var wire 1 G$ cout $end
$var wire 1 H$ sum $end
$upscope $end
$scope module add7 $end
$var wire 1 I$ a $end
$var wire 1 J$ b $end
$var wire 1 K$ cin $end
$var wire 1 L$ cout $end
$var wire 1 M$ sum $end
$upscope $end
$scope module add8 $end
$var wire 1 N$ a $end
$var wire 1 O$ b $end
$var wire 1 P$ cin $end
$var wire 1 Q$ cout $end
$var wire 1 R$ sum $end
$upscope $end
$scope module add9 $end
$var wire 1 S$ a $end
$var wire 1 T$ b $end
$var wire 1 U$ cin $end
$var wire 1 V$ cout $end
$var wire 1 W$ sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0W$
0V$
0U$
0T$
0S$
0R$
0Q$
0P$
0O$
0N$
0M$
0L$
0K$
0J$
0I$
0H$
0G$
0F$
0E$
0D$
0C$
0B$
0A$
0@$
0?$
1>$
0=$
0<$
1;$
0:$
09$
08$
07$
06$
05$
04$
03$
02$
01$
00$
0/$
0.$
0-$
0,$
0+$
0*$
0)$
0($
0'$
0&$
0%$
0$$
0#$
0"$
0!$
0~#
0}#
0|#
0{#
0z#
0y#
0x#
0w#
0v#
0u#
0t#
0s#
0r#
0q#
0p#
0o#
0n#
0m#
0l#
0k#
0j#
0i#
0h#
0g#
0f#
0e#
0d#
0c#
0b#
0a#
0`#
0_#
0^#
0]#
0\#
0[#
0Z#
0Y#
0X#
0W#
1V#
0U#
0T#
0S#
1R#
0Q#
0P#
0O#
0N#
0M#
0L#
0K#
0J#
0I#
0H#
0G#
0F#
0E#
0D#
0C#
0B#
0A#
0@#
0?#
0>#
0=#
0<#
0;#
0:#
09#
08#
07#
06#
05#
04#
03#
02#
01#
00#
0/#
0.#
0-#
0,#
0+#
0*#
0)#
0(#
0'#
0&#
0%#
0$#
0##
0"#
0!#
0~"
1}"
0|"
0{"
0z"
1y"
1x"
0w"
0v"
0u"
b0 t"
b10111 s"
b10000 r"
b110 q"
1p"
0o"
0n"
1m"
0l"
1k"
0j"
0i"
1h"
0g"
1f"
0e"
0d"
1c"
0b"
1a"
0`"
0_"
1^"
0]"
1\"
0["
0Z"
1Y"
0X"
1W"
0V"
1U"
0T"
0S"
1R"
0Q"
0P"
1O"
0N"
1M"
0L"
0K"
1J"
0I"
0H"
1G"
1F"
1E"
0D"
1C"
0B"
0A"
1@"
0?"
1>"
0="
0<"
1;"
0:"
19"
08"
07"
16"
05"
14"
03"
02"
11"
00"
1/"
0."
0-"
1,"
0+"
1*"
0)"
0("
1'"
0&"
1%"
0$"
0#"
1""
0!"
1~
0}
0|
1{
0z
1y
0x
0w
1v
0u
1t
0s
0r
1q
0p
1o
1n
1m
1l
1k
1j
0i
0h
1g
0f
1e
0d
0c
1b
0a
1`
0_
0^
1]
0\
1[
0Z
0Y
1X
0W
1V
0U
0T
1S
0R
1Q
0P
0O
1N
0M
1L
0K
0J
1I
0H
1G
0F
0E
1D
0C
1B
0A
0@
1?
0>
1=
0<
0;
1:
09
18
17
16
15
14
03
12
11
00
b1111 /
b11111111111111111111111111110110 .
b11111111111111111111111111101111 -
b110 ,
b11111111111111111111111111110110 +
1*
b11111111111111111111111111110110 )
b10111 (
b10000 '
b110 &
b10 %
b10000 $
b110 #
b10 "
b11111111111111111111111111110110 !
$end
#1
1Q"
0R"
1P"
1L"
0M"
1K"
1B"
0C"
1A"
1="
0>"
1<"
18"
09"
17"
13"
04"
12"
1."
0/"
1-"
1)"
0*"
1("
1$"
0%"
1#"
1}
0~
1|
1x
0y
1w
1s
0t
1r
1i
0j
1h
1d
0e
1c
1_
0`
1^
1Z
0[
1Y
1U
0V
1T
1P
0Q
1O
1K
0L
1J
1F
0G
1E
1A
0B
1@
1<
0=
1;
1o"
0p"
1n"
1j"
0k"
1i"
1e"
0f"
1C$
1d"
1A$
1`"
1=$
0a"
0>$
1_"
1<$
1["
1.$
0\"
1m
1F"
1Z"
17
08
1n
0o
1T#
1-$
b11111111111111111111111111111111 /
1V"
b11000 !
b11000 +
1|"
0}"
b11110 t"
1U#
1V#
1H"
b11000 )
b11000 .
1W"
b100101 (
b100101 s"
0/$
05
0l
1T"
b11111111111111111111111111111001 -
1z"
1S#
0;$
1D"
1S"
1+$
1:$
b110 $
b110 '
b110 r"
b11110 #
b11110 &
b11110 ,
b11110 q"
#2
0H"
0F"
0n
1o
0m
07
18
06
b11111111111111111111111111111000 /
02
b10111 )
b10111 .
13
b100100 (
b100100 s"
0x"
b100100 !
b100100 +
0*
b0 "
b0 %
#3
0F"
0n
1o
0m
07
0U"
0Z"
18
0_"
0d"
0n"
0i"
0;
0@
0E
0J
0O
0T
0Y
0^
0c
0h
0r
0w
0|
0#"
0("
0-"
02"
07"
0<"
0A"
0K"
0P"
1}"
1H$
1M$
1W$
1R$
1$#
1)#
1.#
13#
18#
1=#
1B#
1G#
1L#
1Q#
1[#
1`#
1e#
1j#
1o#
1t#
1y#
1~#
1%$
1*$
14$
19$
0G"
1H"
0V"
1W"
06
0["
0`"
0j"
0e"
0o"
0<
0A
0F
0K
0P
0U
0Z
0_
0d
0i
0s
0x
0}
0$"
0)"
0."
03"
08"
0="
0B"
0L"
0Q"
b11111111111111111111111111111110 !
b11111111111111111111111111111110 +
1{"
1F$
1K$
1U$
1P$
1"#
1'#
1,#
11#
16#
1;#
1@#
1E#
1J#
1O#
1Y#
1^#
1c#
1h#
1m#
1r#
1w#
1|#
1#$
1($
12$
17$
1/$
b11111111111111111111111111111110 (
b11111111111111111111111111111110 s"
1>$
b0 /
02
13
1\"
1a"
1k"
1f"
1p"
1=
1B
1G
1L
1Q
1V
1[
1`
1e
1j
1t
1y
1~
1%"
1*"
1/"
14"
19"
1>"
1C"
1M"
b11111111111111111111111111111111 )
b11111111111111111111111111111111 .
1R"
1w"
1B$
1G$
1Q$
1L$
1V$
1##
1(#
1-#
12#
17#
1<#
1A#
1F#
1K#
1P#
1Z#
1_#
1d#
1i#
1n#
1s#
1x#
1}#
1$$
1)$
13$
b11111111111111111111111111111111 t"
18$
01
0E"
0T"
0Y"
0^"
0h"
0c"
0m"
0:
0?
0D
0I
0N
0S
0X
0]
0b
0g
0q
0v
0{
0""
0'"
0,"
01"
06"
0;"
0@"
0J"
0O"
b0 -
1v"
1,$
1;$
1@$
1E$
1O$
1J$
1T$
1!#
1&#
1+#
10#
15#
1:#
1?#
1D#
1I#
1N#
1X#
1]#
1b#
1g#
1l#
1q#
1v#
1{#
1"$
1'$
11$
16$
10
1X"
1]"
1g"
1b"
1l"
19
1>
1C
1H
1M
1R
1W
1\
1a
1f
1p
1u
1z
1!"
1&"
1+"
10"
15"
1:"
1?"
1I"
1N"
1u"
1?$
1D$
1N$
1I$
1S$
1~"
1%#
1*#
1/#
14#
19#
1>#
1C#
1H#
1M#
1W#
1\#
1a#
1f#
1k#
1p#
1u#
1z#
1!$
1&$
10$
15$
b11111111111111111111111111111111 $
b11111111111111111111111111111111 '
b11111111111111111111111111111111 r"
b11111111111111111111111111111111 #
b11111111111111111111111111111111 &
b11111111111111111111111111111111 ,
b11111111111111111111111111111111 q"
#4
1Q"
0R"
1P"
1L"
0M"
1K"
1B"
0C"
1A"
1="
0>"
1<"
18"
09"
17"
13"
04"
12"
1."
0/"
1-"
1)"
0*"
1("
1$"
0%"
1#"
1}
0~
1|
1x
0y
1w
1s
0t
1r
1i
0j
1h
1d
0e
1c
1_
0`
1^
1Z
0[
1Y
1U
0V
1T
1P
0Q
1O
1K
0L
1J
1F
0G
1E
1A
0B
1@
1<
0=
1;
1o"
0p"
1n"
1j"
0k"
1i"
1e"
0f"
1d"
1`"
0a"
1_"
1["
0\"
1Z"
1V"
0W"
1U"
1G"
0H"
1F"
1n
0o
1m
17
08
16
b11111111111111111111111111111111 /
12
b0 )
b0 .
03
b11111111111111111111111111111111 (
b11111111111111111111111111111111 s"
1x"
b0 !
b0 +
1*
b10 "
b10 %
#5
