$date
	Mon Jul 13 15:10:38 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module controller_tb $end
$var wire 3 ! alucontrol [2:0] $end
$var wire 1 " alusrca $end
$var wire 2 # alusrcb [1:0] $end
$var wire 1 $ iord $end
$var wire 1 % irwrite $end
$var wire 1 & memtoreg $end
$var wire 1 ' memwrite $end
$var wire 1 ( pcen $end
$var wire 2 ) pcsrc [1:0] $end
$var wire 1 * regdst $end
$var wire 1 + regwrite $end
$var reg 1 , clk $end
$var reg 15 - errors [14:0] $end
$var reg 6 . funct [5:0] $end
$var reg 6 / op [5:0] $end
$var reg 1 0 reset $end
$var reg 15 1 result [14:0] $end
$var reg 15 2 result_expected [14:0] $end
$var reg 15 3 vectornum [14:0] $end
$var reg 1 4 zero $end
$scope module dut $end
$var wire 3 5 alucontrol [2:0] $end
$var wire 2 6 aluop [1:0] $end
$var wire 1 " alusrca $end
$var wire 2 7 alusrcb [1:0] $end
$var wire 1 8 branch $end
$var wire 1 9 clk $end
$var wire 6 : funct [5:0] $end
$var wire 1 $ iord $end
$var wire 1 % irwrite $end
$var wire 1 & memtoreg $end
$var wire 1 ' memwrite $end
$var wire 6 ; op [5:0] $end
$var wire 1 ( pcen $end
$var wire 2 < pcsrc [1:0] $end
$var wire 1 = pcwrite $end
$var wire 1 * regdst $end
$var wire 1 + regwrite $end
$var wire 1 > reset $end
$var wire 1 ? zero $end
$scope module md $end
$var wire 1 9 clk $end
$var wire 6 @ op [5:0] $end
$var wire 1 > reset $end
$var reg 2 A aluop [1:0] $end
$var reg 1 B alusrca $end
$var reg 2 C alusrcb [1:0] $end
$var reg 1 D branch $end
$var reg 15 E controls [14:0] $end
$var reg 1 F iord $end
$var reg 1 G irwrite $end
$var reg 1 H memtoreg $end
$var reg 1 I memwrite $end
$var reg 4 J nextstate [3:0] $end
$var reg 2 K pcsrc [1:0] $end
$var reg 1 L pcwrite $end
$var reg 1 M regdst $end
$var reg 1 N regwrite $end
$var reg 4 O state [3:0] $end
$upscope $end
$scope module ad $end
$var wire 2 P aluop [1:0] $end
$var wire 6 Q funct [5:0] $end
$var reg 3 R alucontrol [2:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mips $end
$var wire 32 S adr [31:0] $end
$var wire 3 T alucontrol [2:0] $end
$var wire 1 U alusrca $end
$var wire 2 V alusrcb [1:0] $end
$var wire 1 W clk $end
$var wire 6 X funct [5:0] $end
$var wire 1 Y iord $end
$var wire 1 Z irwrite $end
$var wire 1 [ memtoreg $end
$var wire 1 \ memwrite $end
$var wire 6 ] op [5:0] $end
$var wire 1 ^ pcen $end
$var wire 2 _ pcsrc [1:0] $end
$var wire 32 ` readdata [31:0] $end
$var wire 1 a regdst $end
$var wire 1 b regwrite $end
$var wire 1 c reset $end
$var wire 32 d writedata [31:0] $end
$var wire 1 e zero $end
$scope module c $end
$var wire 3 f alucontrol [2:0] $end
$var wire 2 g aluop [1:0] $end
$var wire 1 U alusrca $end
$var wire 2 h alusrcb [1:0] $end
$var wire 1 i branch $end
$var wire 1 W clk $end
$var wire 6 j funct [5:0] $end
$var wire 1 Y iord $end
$var wire 1 Z irwrite $end
$var wire 1 [ memtoreg $end
$var wire 1 \ memwrite $end
$var wire 6 k op [5:0] $end
$var wire 1 ^ pcen $end
$var wire 2 l pcsrc [1:0] $end
$var wire 1 m pcwrite $end
$var wire 1 a regdst $end
$var wire 1 b regwrite $end
$var wire 1 c reset $end
$var wire 1 e zero $end
$scope module md $end
$var wire 1 W clk $end
$var wire 6 n op [5:0] $end
$var wire 1 c reset $end
$var reg 2 o aluop [1:0] $end
$var reg 1 p alusrca $end
$var reg 2 q alusrcb [1:0] $end
$var reg 1 r branch $end
$var reg 15 s controls [14:0] $end
$var reg 1 t iord $end
$var reg 1 u irwrite $end
$var reg 1 v memtoreg $end
$var reg 1 w memwrite $end
$var reg 4 x nextstate [3:0] $end
$var reg 2 y pcsrc [1:0] $end
$var reg 1 z pcwrite $end
$var reg 1 { regdst $end
$var reg 1 | regwrite $end
$var reg 4 } state [3:0] $end
$upscope $end
$scope module ad $end
$var wire 2 ~ aluop [1:0] $end
$var wire 6 !" funct [5:0] $end
$var reg 3 "" alucontrol [2:0] $end
$upscope $end
$upscope $end
$scope module dp $end
$var wire 32 #" adr [31:0] $end
$var wire 3 $" alucontrol [2:0] $end
$var wire 1 U alusrca $end
$var wire 2 %" alusrcb [1:0] $end
$var wire 1 W clk $end
$var wire 6 &" funct [5:0] $end
$var wire 32 '" instr [31:0] $end
$var wire 1 Y iord $end
$var wire 1 Z irwrite $end
$var wire 1 [ memtoreg $end
$var wire 6 (" op [5:0] $end
$var wire 1 ^ pcen $end
$var wire 2 )" pcsrc [1:0] $end
$var wire 32 *" readdata [31:0] $end
$var wire 1 a regdst $end
$var wire 1 b regwrite $end
$var wire 1 c reset $end
$var wire 32 +" writedata [31:0] $end
$var wire 1 e zero $end
$upscope $end
$upscope $end
$scope module mux3 $end
$var wire 8 ," d0 [7:0] $end
$var wire 8 -" d1 [7:0] $end
$var wire 8 ." d2 [7:0] $end
$var wire 2 /" s [1:0] $end
$var wire 8 0" y [7:0] $end
$upscope $end
$scope module mux4 $end
$var wire 8 1" d0 [7:0] $end
$var wire 8 2" d1 [7:0] $end
$var wire 8 3" d2 [7:0] $end
$var wire 8 4" d3 [7:0] $end
$var wire 2 5" s [1:0] $end
$var reg 8 6" y [7:0] $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 6"
bz 5"
bz 4"
bz 3"
bz 2"
bz 1"
bz 0"
bz /"
bz ."
bz -"
bz ,"
bz +"
bz *"
bx )"
bz ("
bz '"
bz &"
bx %"
bx $"
bz #"
bx ""
bz !"
bx ~
bx }
x|
x{
xz
bx y
bx x
xw
xv
xu
xt
bx s
xr
bx q
xp
bx o
bz n
xm
bx l
bz k
bz j
xi
bx h
bx g
bx f
ze
bz d
zc
xb
xa
bz `
bx _
x^
bz ]
x\
x[
xZ
xY
bz X
zW
bx V
xU
bx T
bz S
b10 R
bx Q
b0 P
b0 O
0N
0M
1L
b0 K
b1 J
0I
0H
1G
0F
b101000000010000 E
0D
b1 C
0B
b0 A
bx @
x?
1>
1=
b0 <
bx ;
bx :
19
08
b1 7
b0 6
b10 5
x4
b111111111111111 3
bx 2
bx 1
10
bx /
bx .
b0 -
1,
0+
0*
b0 )
1(
0'
0&
1%
0$
b1 #
0"
b10 !
$end
#1
bz 0"
#10
b101000000100010 1
b0 3
0,
09
#20
0(
b11 C
b11 #
b11 7
0G
0%
0L
0=
b110000 E
b110 J
b1 O
b0 2
04
0?
b0 .
b0 :
b0 Q
b0 /
b0 ;
b0 @
1,
19
00
0>
#30
b1100010 1
b1 3
0,
09
#40
b10 A
b10 6
b10 P
b0 C
b0 #
b0 7
1B
1"
b10000000010 E
b111 J
b110 O
b1100010 2
b100000 .
b100000 :
b100000 Q
b100011 /
b100011 ;
b100011 @
1,
19
#50
b10000000010 1
b10 3
0,
09
#60
b0 A
b0 6
b0 P
1M
1*
0B
0"
1N
1+
b100001000000 E
b0 J
b111 O
b10000000010 2
1,
19
#70
b100010000010 1
b11 3
0,
09
#80
1(
b1 C
b1 #
b1 7
0M
0*
0N
0+
1G
1%
1L
1=
b101000000010000 E
b1 J
b0 O
b0 2
1,
19
#90
b101000000100010 1
b100 3
b1 -
0,
09
#100
0(
b11 C
b11 #
b11 7
0G
0%
0L
0=
b110000 E
b10 J
b1 O
1,
19
#110
b1100010 1
b101 3
b10 -
0,
09
#120
b10 C
b10 #
b10 7
1B
1"
b10000100000 E
bx J
b10 O
bx 2
x4
x?
bx .
bx :
bx Q
bx /
bx ;
bx @
1,
19
#130
b10001000010 1
b110 3
b11 -
0,
09
#140
bx R
bx !
bx 5
x(
bx A
bx 6
bx P
bx K
bx )
bx <
bx C
bx #
bx 7
xM
x*
xH
x&
xF
x$
xD
x8
xB
x"
xN
x+
xG
x%
xI
x'
xL
x=
bx E
bx O
1,
19
#150
bx 1
b111 3
b100 -
0,
09
#160
1,
19
#170
b1000 3
0,
09
#180
1,
19
#190
b1001 3
0,
09
#200
1,
19
#210
b1010 3
0,
09
#220
1,
19
#230
b1011 3
0,
09
#240
1,
19
#250
b1100 3
0,
09
#260
1,
19
#270
b1101 3
0,
09
#280
1,
19
#290
b1110 3
0,
09
#300
1,
19
#310
b1111 3
0,
09
#320
1,
19
#330
b10000 3
0,
09
#340
1,
19
#350
b10001 3
0,
09
#360
1,
19
#370
b10010 3
0,
09
#380
1,
19
#390
b10011 3
0,
09
#400
1,
19
#410
b10100 3
0,
09
#420
1,
19
#430
b10101 3
0,
09
#440
1,
19
#450
b10110 3
0,
09
#460
1,
19
#470
b10111 3
0,
09
#480
1,
19
#490
b11000 3
0,
09
#500
1,
19
#510
b11001 3
0,
09
#520
1,
19
#530
b11010 3
0,
09
#540
1,
19
#550
b11011 3
0,
09
